<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">
   <select id="selectListCount" resultType="int">
      SELECT COUNT(*)
      FROM BOARD
      WHERE STATUS = 'Y' AND BOARD_CD = #{boardCode}
   </select>
   
   <resultMap type="board" id="boardResultSet" >
      <result column="BOARD_NO" property="boardNo"/>
      <result column="BOARD_TITLE" property="boardTitle"/>
      <result column="BOARD_WRITER" property="boardWriter"/>
      <result column="BOARD_CONTENT" property="boardContent"/>
      <result column="COUNT" property="count"/>
      <result column="CREATE_DATE" property="createDate"/>
      <result column="ORIGIN_NAME_AT" property="originName"/>
      <result column="CHANGE_NAME_AT" property="changeName"/>
      <result column="BOARD_CD" property="boardCd"/>
      <!-- 방법 2. -->
      <collection property="imgList" resultMap="boardImgResultSet"/>
      <!-- 방법 1. -->
<!--       <collection property="imgList" column="BOARD_NO" javaType="java.util.ArrayList" ofType="boardImg" select="selectImgList"/> -->
      <!--
         select = "selectImgList"의 조회결과를 board vo객체의 imgList필드에 담겠다는 의미.
         -> imgList에 담을 때 java.util.ArrayList<BoardImg> 객체를 생성해서 담음.
         -> selectImgList 호출할 때 필요한 데이터(boardNo) 전달하는 용도로 column="BOARD_NO"를 사용   
      -->
         
   </resultMap>
   
   <resultMap type="reply" id="replyResultSet">
      <result column="REPLY_NO" property="replyNo"/>
      <result column="REPLY_CONTENT" property="replyContent"/>
      <result column="REF_BNO" property="refBno"/>
      <result column="REPLY_WRITER" property="replyWriter"/>
      <result column="CREATE_DATE" property="createDate"/>
      <result column="STATUS" property="status"/>
   </resultMap>
   
   <resultMap type="boardType" id="boardTypeResultSet">
      <id column="BOARD_CD" property="boardCd"/>
      <result column="BOARD_NAME" property="boardName"/>
   </resultMap>
   
   
   <resultMap type="boardImg" id="boardImgResultSet">
      <id column="BOARD_IMG_NO" property="boardImgNo"/>
      <result column="ORIGIN_NAME" property="originName"/>
      <result column="CHANGE_NAME" property="changeName"/>
      <result column="REF_BNO" property="refBno"/>
      <result column="IMG_LEVEL" property="imgLevel"/>
   </resultMap>
   
   <select id="selectImgList" resultMap="boardImgResultSet">
      SELECT *
      FROM BOARD_IMG
      WHERE REF_BNO = #{boardNo}
      ORDER BY IMG_LEVEL
      
   </select>   
   
   <select id="selectBoardTypeList" resultMap="boardTypeResultSet">
      SELECT *
      FROM BOARD_TYPE
      ORDER BY BOARD_CD
      
   </select>   
   
   <select id="selectList" resultMap="boardResultSet">
      SELECT
         BOARD_NO,
         BOARD_TITLE,
         BOARD_WRITER,
         COUNT,
         CREATE_DATE,
         ORIGIN_NAME
      FROM BOARD
      WHERE STATUS ='Y' AND BOARD_CD = #{boardCode}
      ORDER BY CREATE_DATE DESC
      
   </select>
   
   <insert id="insertBoard" parameterType="board" useGeneratedKeys="true">
   
      <selectKey keyProperty="boardNo" resultType="int" order="BEFORE">
         SELECT SEQ_BNO.NEXTVAL FROM DUAL
      </selectKey>
         
      INSERT INTO BOARD(
         BOARD_NO,
         BOARD_TITLE,
         BOARD_WRITER,
         BOARD_CONTENT,
         ORIGIN_NAME,
         CHANGE_NAME,
         BOARD_CD
      ) VALUES (
         #{boardNo},
         #{boardTitle},
         #{boardWriter},
         #{boardContent},
         #{originName},
         #{changeName},
         #{boardCd}
      )
      
   </insert>
   
   <insert id="insertBoardImgList" parameterType="list">
      INSERT INTO BOARD_IMG
      SELECT 
         SEQ_IMG_NO.NEXTVAL AS IMG_NO,
         C.*
      FROM
      (
      <foreach collection="list" item="img" separator="UNION ALL">
         SELECT 
            #{img.originName} AS ORIGIN_NAME_AT,
            #{img.changeName} AS CHANGE_NAME_AT,
            #{img.refBno} AS REF_BNO,
            #{img.imgLevel} AS IMG_LEVEL
         FROM DUAL
      </foreach>
      ) C
               
   </insert>
   
   <update id="increaseCount" parameterType="int">
      UPDATE BOARD
      SET COUNT = COUNT +1
      WHERE BOARD_NO = #{boardNo}
   </update>
   
   
   
   <select id="selectBoard" parameterType="int" resultMap="boardResultSet">
   <!-- 방법 1. -->
<!--       SELECT -->
<!--          BOARD_NO, -->
<!--          BOARD_WRITER, -->
<!--          BOARD_TITLE, -->
<!--          COUNT, -->
<!--          BOARD_CONTENT, -->
<!--          ORIGIN_NAME, -->
<!--          CHANGE_NAME -->
<!--       FROM BOARD  -->
<!--       WHERE BOARD_NO = #{bno} -->
   <!-- 방법 2. -->
      SELECT
         BOARD_NO,
         BOARD_WRITER,
         BOARD_TITLE,
         COUNT,
         BOARD_CONTENT,
         B.ORIGIN_NAME AS ORIGIN_NAME_AT,
         B.CHANGE_NAME AS CHANGE_NAME_AT,
         BI.*
      FROM BOARD B
      LEFT JOIN BOARD_IMG BI ON B.BOARD_NO = BI.REF_BNO
      WHERE BOARD_NO = #{bno}
   </select>

   <select id="selectReplyList" parameterType="int" resultMap="replyResultSet">
      SELECT
         REPLY_NO,
         REPLY_CONTENT,
         REF_BNO,
         USER_ID AS REPLY_WRITER,
         R.CREATE_DATE,
         R.STATUS
      FROM REPLY R
      JOIN MEMBER M ON (R.REPLY_WRITER = M.USER_NO)
      WHERE R.STATUS = 'Y'
      AND REF_BNO = #{bno}
   </select>

   <insert id="insertReply" parameterType="reply" >
   INSERT INTO REPLY(REPLY_NO, REPLY_CONTENT, REF_BNO, REPLY_WRITER)
   VALUES (SEQ_RNO.NEXTVAL, #{replyContent}, #{refBno}, #{replyWriter} )
   </insert>

   <select id="selectFileList" resultType="string">
      SELECT SUBSTR(CHANGE_NAME, INSTR(CHANGE_NAME , '/' ,1 ,2) +1 ) 
      FROM BOARD
      WHERE CHANGE_NAME IS NOT NULL AND STATUS = 'Y'
   </select>

   <select id="searchList" resultMap="boardResultSet">
      SELECT
         BOARD_NO,
         BOARD_TITLE,
         BOARD_WRITER,
         COUNT,
         B.CREATE_DATE,
         ORIGIN_NAME
      FROM BOARD B
      LEFT JOIN MEMBER M ON (BOARD_WRITER = USER_NO)
      WHERE B.STATUS ='Y' AND BOARD_CD = #{boardCode}
      <!-- 검색어가 있는 경우 -->
      <if test="keyword != null and keyword != ''">
         AND
         <choose>
            <when test="condition == 'title'">
               BOARD_TITLE LIKE '%${keyword}%'
            </when>
            <when test="condition == 'content'">
               BOARD_CONTENT LIKE '%${keyword}%'
            </when>
            <when test="condition == 'titleAndContent'">
               (BOARD_TITLE LIKE '%${keyword}%'
               OR BOARD_CONTENT LIKE '%${keyword}%') 
            </when>
            <when test="condition == 'writer'">
               USER_ID LIKE '%${keyword}%'
            </when>
         </choose>
      </if>
      ORDER BY B.CREATE_DATE DESC
      
   </select>

   <select id="searchListCount" resultType="int">
      SELECT COUNT(*)
      FROM BOARD B
      LEFT JOIN MEMBER M ON (BOARD_WRITER = USER_NO)
      WHERE B.STATUS = 'Y'
      AND BOARD_CD = #{boardCode}
      <if test="keyword != null and keyword != ''">
         AND
         <choose>
            <when test="condition == 'title'">
               BOARD_TITLE LIKE '%${keyword}%'
            </when>
            <when test="condition == 'content'">
               BOARD_CONTENT LIKE '%${keyword}%'
            </when>
            <when test="condition == 'titleAndContent'">
               (BOARD_TITLE LIKE '%${keyword}%'
               OR BOARD_CONTENT LIKE '%${keyword}%') 
            </when>
            <when test="condition == 'writer'">
               USER_ID LIKE '%${keyword}%'
            </when>
         </choose>
      </if>
   </select>

	<!-- 게시글 수정 -->
	<update id="updateBoard" parameterType="board">
		UPDATE BOARD SET 
			BOARD_TITLE = #{boardTitle},
			BOARD_CONTENT = #{boardContent},
			ORIGIN_NAME = #{originName},
			CHANGE_NAME = #{changeName}
		WHERE BOARD_NO = #{boardNo}
	</update>


	<!-- 게시글 이미지 1개단위로 수정 -->
	<update id="updateBoardImg" parameterType="boardImg">
		UPDATE BOARD_IMG SET
			ORIGIN_NAME = #{originName},
			CHANGE_NAME = #{changeName}
		WHERE REF_BNO = #{refBno} AND IMG_LEVEL = #{imgLevel}
	</update>

	<insert id="insertBoardImg" parameterType="boardImg">
		INSERT INTO BOARD_IMG VALUES(
			SEQ_IMG_NO.NEXTVAL,
			#{originName},
			#{changeName},
			#{refBno},
			#{imgLevel}
		)
	</insert>

	<!-- 게시글에서 이미지만 삭제 -->
	<delete id="deleteBoardImage" parameterType="map">
		DELETE FROM BOARD_IMG
		WHERE REF_BNO = #{boardNo}
		AND IMG_LEVEL IN (${deleteList}) <!-- AND IMG_LEVEL IN (1,2,3) -->
	</delete>

























</mapper>